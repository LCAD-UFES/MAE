/* Counters */
int count;
int count_trained;
int i;
int FIRST_TRAFFIC_LIGHT_TYPE;
int NUM_PROHIBITORY_TRAFFIC_LIGHT_TYPES;
int NUM_IMAGES;
int NUM_TRAFFIC_LIGHT_FOR_TRAIN;
int x;
int y;
int delta_move;
int upper_y;
int lower_y;
float scale_factor;
int RECALL_PHASE;
RECALL_PHASE = 2;
int TRAINING_PHASE;
TRAINING_PHASE = 1;

/* Trainning */
SetNetworkStatus(TRAINING_PHASE);

NUM_TRAFFIC_LIGHT_FOR_TRAIN = 100;
FIRST_TRAFFIC_LIGHT_TYPE = 0;
NUM_PROHIBITORY_TRAFFIC_LIGHT_TYPES = 1;

i = FIRST_TRAFFIC_LIGHT_TYPE;
while (i < (FIRST_TRAFFIC_LIGHT_TYPE + NUM_PROHIBITORY_TRAFFIC_LIGHT_TYPES))
{
	count = 0;
	count_trained=0;
	while (count < NUM_TRAFFIC_LIGHT_FOR_TRAIN)
	{
		if (GetBestProhibitoryTrafficLight_various(i, 0, 146))
		{
			TrainTrafficLight(0);
			count_trained = count_trained + 1;
		}
		count = count + 1;
	}
	print("Type = ", i);
	print("Count trained = ", count_trained);
	
	i = i + 1;
}

/* Testing */
SetNetworkStatus(RECALL_PHASE);

SetCriterion(-1); /* NONE */

NUM_IMAGES = GetNumImages(0);
i = 0;
while (i < (NUM_IMAGES))
{
	GetImage(i);
	scale_factor = 35.0 / 128.0;
	while (scale_factor < (35.0 / 16.0)) 
	{
		SetScaleFactor(scale_factor);
		delta_move = GetDeltaMove(0);
		upper_y = (scale_factor / (35.0 / 16.0)) * 500.0 - 62;
		lower_y = (scale_factor / (35.0 / 16.0)) * 150.0 - 18;
		y = delta_move / 2 + lower_y;
		while (y < (960 - upper_y))
		{
			x = delta_move;
			while (x < 1280)
			{
				MoveToPoint(x, y);
				key s;
				CheckTrafficLightDetection(0);
				x = x + delta_move;
			}
			y = y + delta_move;
		}
		scale_factor = scale_factor * 1.2;
	}
	i = i + 1;
}
quit;