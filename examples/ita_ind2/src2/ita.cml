SetLongShort(1); # Long
LoadReturns2_("DATA_64_TAQ/20160301_64_LONG_TAQ.csv");
#LoadReturns("DATA/20160301_WIN_IND_WDO_DOL_64_LONG.csv");
#LoadReturns("DATA/20160301_WIN_IND_WDO_DOL_64_LONG_NOVO.csv");
#SetLongShort(0); # Short
#LoadReturns("DATA/20160303_WIN_IND_WDO_DOL_64_SHORT.csv");


int RETURNS2TRAIN;
int FIRST_RETURNS2TRAIN;
FIRST_RETURNS2TRAIN = 30;
RETURNS2TRAIN = 50;

int RETURNS2WARM_UP;	
int FIRST_RETURNS2WARM_UP;	
FIRST_RETURNS2WARM_UP = FIRST_RETURNS2TRAIN + RETURNS2TRAIN;
RETURNS2WARM_UP = 0;

int RETURNS2TEST;	
int FIRST_RETURNS2TEST;	

int sanity;
sanity = 1;

if (sanity == 1)
{
	FIRST_RETURNS2TEST = FIRST_RETURNS2TRAIN; # sanity test
	RETURNS2TEST = RETURNS2TRAIN; # sanity test	
}
else
{
	FIRST_RETURNS2TEST = FIRST_RETURNS2TRAIN + RETURNS2TRAIN + RETURNS2WARM_UP;
	RETURNS2TEST = 100 - FIRST_RETURNS2TEST;
}



/* Network Status */
int TRAINING_PHASE;
TRAINING_PHASE = 1;
int TESTING_PHASE;
TESTING_PHASE = 2;
int WARM_UP_PHASE;
WARM_UP_PHASE = 3;

clear out_result;

/* Counters */
int i;

/* Training Phase */
ResetStatistics(0);
SetNetworkStatus(WARM_UP_PHASE);
#SetNetworkStatus(TRAINING_PHASE);
i = FIRST_RETURNS2TRAIN;
#while (i < RETURNS2TRAIN + FIRST_RETURNS2TRAIN + RETURNS2TEST + FIRST_RETURNS2TEST)
while (i < RETURNS2TRAIN + FIRST_RETURNS2TRAIN)
{
	#print("train ", 0);
	GetRandomReturns(i);
	#print("train ", i);

	forward filters;
	forward neural_layers;
	forward outputs;

	#ShowStatistics(0);

	/* Draws the landmark neuron layer output */
	draw out_prediction based on ita move;
	train network;
	
	i = i + 1;
}

	
/* Testing phase */
if (sanity == 1)
{
	ResetStatistics(0);
}

SetNetworkStatus(TESTING_PHASE);

i = FIRST_RETURNS2TEST;
while (i < RETURNS2TEST + FIRST_RETURNS2TEST)
{
	print("test ", 0);
	GetRandomReturns(i);
	print("test ", i-FIRST_RETURNS2TEST);

	forward filters;
	forward neural_layers;
	forward outputs;

	/* Draws the landmark neuron layer output */
#	draw out_prediction based on ita move;

	ShowStatistics(0);
	if (sanity == 0)
	{
		copy out_test;
		paste out_prediction;
		train network;
	}
	else
	{
		ShowNeuronsMemory(0);
	}

	i = i + 1;
	
}

ShowStatisticsExp(0);
#quit;
